'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="BanCP")>  _
Partial Public Class DatosDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Definiciones de métodos de extensibilidad"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertMovimientos(instance As Movimientos)
    End Sub
  Partial Private Sub UpdateMovimientos(instance As Movimientos)
    End Sub
  Partial Private Sub DeleteMovimientos(instance As Movimientos)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.WebBanCo.My.MySettings.Default.Conexion, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Movimientos() As System.Data.Linq.Table(Of Movimientos)
		Get
			Return Me.GetTable(Of Movimientos)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Movimientos")>  _
Partial Public Class Movimientos
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdMovimientos As Integer
	
	Private _TipoMovimiento As String
	
	Private _Tarjeta As String
	
	Private _CantidadMovimiento As Integer
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdMovimientosChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdMovimientosChanged()
    End Sub
    Partial Private Sub OnTipoMovimientoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoMovimientoChanged()
    End Sub
    Partial Private Sub OnTarjetaChanging(value As String)
    End Sub
    Partial Private Sub OnTarjetaChanged()
    End Sub
    Partial Private Sub OnCantidadMovimientoChanging(value As Integer)
    End Sub
    Partial Private Sub OnCantidadMovimientoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdMovimientos", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IdMovimientos() As Integer
		Get
			Return Me._IdMovimientos
		End Get
		Set
			If ((Me._IdMovimientos = value)  _
						= false) Then
				Me.OnIdMovimientosChanging(value)
				Me.SendPropertyChanging
				Me._IdMovimientos = value
				Me.SendPropertyChanged("IdMovimientos")
				Me.OnIdMovimientosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoMovimiento", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property TipoMovimiento() As String
		Get
			Return Me._TipoMovimiento
		End Get
		Set
			If (String.Equals(Me._TipoMovimiento, value) = false) Then
				Me.OnTipoMovimientoChanging(value)
				Me.SendPropertyChanging
				Me._TipoMovimiento = value
				Me.SendPropertyChanged("TipoMovimiento")
				Me.OnTipoMovimientoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tarjeta", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Tarjeta() As String
		Get
			Return Me._Tarjeta
		End Get
		Set
			If (String.Equals(Me._Tarjeta, value) = false) Then
				Me.OnTarjetaChanging(value)
				Me.SendPropertyChanging
				Me._Tarjeta = value
				Me.SendPropertyChanged("Tarjeta")
				Me.OnTarjetaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CantidadMovimiento", DbType:="Int NOT NULL")>  _
	Public Property CantidadMovimiento() As Integer
		Get
			Return Me._CantidadMovimiento
		End Get
		Set
			If ((Me._CantidadMovimiento = value)  _
						= false) Then
				Me.OnCantidadMovimientoChanging(value)
				Me.SendPropertyChanging
				Me._CantidadMovimiento = value
				Me.SendPropertyChanged("CantidadMovimiento")
				Me.OnCantidadMovimientoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
